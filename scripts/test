#!/bin/bash
set -e

GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

declare isTestFailed=false

launchContainersAndRunIntegrationTest(){
  printf "${GREEN}*** Docker Compose Build ***${NC}\n"
  docker-compose build

  printf "${GREEN}*** Launching containerized ganache ***${NC}\n"
  docker-compose up -d ganache

  printf "${GREEN}*** Deploying all contracts ***${NC}\n"
  docker-compose run --rm truffle migrate --reset --network=default

  printf "${GREEN}*** Launching independent containers ***${NC}\n"
  # these container take time to setup
  # starting them first to avoid ECONNREFUSED error
  # as other containers depends on them
  docker-compose up -d mongo-merkle-tree

  sleep 10

  # save all test logs to a file in background
  printf "${GREEN}*** Saving the test logs to the test.log file ***${NC}\n"
  docker-compose logs -f &> test.log &disown

  # delay needed to ensure all container are in running state.
  sleep 30

  printf "${GREEN}*** Run Integration test ***${NC}\n"
  npm run $1 || isTestFailed=true
}


printf "${GREEN}*** Cleaning up all test containers ***${NC}\n"
docker-compose down -v || true

printf  "${GREEN}*** Delete files created by previous run ***${NC}\n"
rm -dr build/ || true
rm contracts/privacy/MerkleTree.sol || true
rm docker-compose.override.yml || true

printf "${GREEN}*** Pull zokrates docker image ***${NC}\n"
docker pull zokrates/zokrates:0.5.1

printf "${GREEN}*** Install node modules dependencies of my-dapp ***${NC}\n"
npm ci

if [[ "$1" == "mimc" ]]
then
  cp docker-compose.override.$1.yml docker-compose.override.yml
  launchContainersAndRunIntegrationTest test-$1

else
  launchContainersAndRunIntegrationTest test
fi

df -h

printf "${GREEN}*** List all containers with their Ips ***${NC}\n"
docker inspect -f '{{.Name}} {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker-compose ps -q)

printf "${GREEN}*** Cleaning up all containers ***${NC}\n"
docker-compose down -v || {
  # delay need as waiting time so all container are properly done
  # nightfall_default network have no dependency left.
  sleep 3

  printf "${GREEN}*** Remove my_network ***${NC}\n"
  docker network rm my_network

  printf "${GREEN}*** Remove the merkle tree's mongo volume ***${NC}\n"
  docker volume rm my-dapp_mongo-merkle-tree-volume
}

if $isTestFailed
then
  printf "${RED}*** Integration test failed ***${NC}\n"
  exit 1
fi
